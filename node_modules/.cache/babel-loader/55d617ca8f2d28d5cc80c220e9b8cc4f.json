{"remainingRequest":"C:\\Users\\user\\Documents\\program\\Button-vuex-api\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\user\\Documents\\program\\Button-vuex-api\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\user\\Documents\\program\\Button-vuex-api\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\user\\Documents\\program\\Button-vuex-api\\src\\store\\index.js","mtime":1615191558777},{"path":"C:\\Users\\user\\Documents\\program\\Button-vuex-api\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\user\\Documents\\program\\Button-vuex-api\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\user\\Documents\\program\\Button-vuex-api\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL3VzZXIvRG9jdW1lbnRzL3Byb2dyYW0vQnV0dG9uLXZ1ZXgtYXBpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IFZ1ZSBmcm9tICJ2dWUiOwppbXBvcnQgVnVleCBmcm9tICJ2dWV4IjsKVnVlLnVzZShWdWV4KTsKZXhwb3J0IGRlZmF1bHQgbmV3IFZ1ZXguU3RvcmUoewogIHN0YXRlOiB7CiAgICBjdXJyZW50Sm9rZTogIlRoaXMgaXMgYSBqb2tlIiwKICAgIGFsbEpva2VzOiBbXSwKICAgIGNoZWNrZWQ6ICcnLAogICAgcG9zdElkOiBudWxsCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIC8vc3luY3JvdXMKICAgIHNldEN1cnJlbnRKb2tlOiBmdW5jdGlvbiBzZXRDdXJyZW50Sm9rZShzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5jdXJyZW50Sm9rZSA9IHBheWxvYWQ7CiAgICAgIHN0YXRlLmFsbEpva2VzLnB1c2gocGF5bG9hZCk7CiAgICB9LAogICAgb25DdXJyZW50U3RhdHVzOiBmdW5jdGlvbiBvbkN1cnJlbnRTdGF0dXMoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUuY2hlY2tlZCA9IHBheWxvYWQ7CgogICAgICBpZiAoc3RhdGUuY2hlY2tlZCA9PT0gdHJ1ZSkgewogICAgICAgIHN0YXRlLmNoZWNrZWQgPSB0cnVlOwogICAgICAgIHRoaXMuY29tbWl0KCJzZXRDdXJyZW50Sm9rZSIsIHN0YXRlLmNoZWNrZWQpOwogICAgICB9IGVsc2UgewogICAgICAgIHN0YXRlLmNoZWNrZWQgPSBmYWxzZTsKICAgICAgICB0aGlzLmNvbW1pdCgic2V0Q3VycmVudEpva2UiLCBzdGF0ZS5jaGVja2VkKTsKICAgICAgfQogICAgfSwKICAgIHBvc3RDdXJyZW50SWQ6IGZ1bmN0aW9uIHBvc3RDdXJyZW50SWQoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUuY2hlY2tlZCA9IHBheWxvYWQ7CgogICAgICBpZiAoc3RhdGUuY2hlY2tlZCA9PT0gdHJ1ZSkgewogICAgICAgIHN0YXRlLmNoZWNrZWQgPSB0cnVlOwogICAgICAgIHRoaXMuY29tbWl0KCJzZXRDdXJyZW50Sm9rZSIsIHN0YXRlLmNoZWNrZWQpOwogICAgICB9IGVsc2UgewogICAgICAgIHN0YXRlLmNoZWNrZWQgPSBmYWxzZTsKICAgICAgICB0aGlzLmNvbW1pdCgic2V0Q3VycmVudEpva2UiLCBzdGF0ZS5jaGVja2VkKTsKICAgICAgfQogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgLy9hc3luY3Jvbm91cwogICAgc2V0Q3VycmVudEpva2U6IGZ1bmN0aW9uIHNldEN1cnJlbnRKb2tlKHN0YXRlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByYW5kb20sIGpva2UsIGo7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgcmFuZG9tID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMik7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL21vZGVzLz9pZD0iLmNvbmNhdChyYW5kb20pKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgam9rZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBqb2tlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgaiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy50b3RhbFZ1ZVBhY2thZ2VzID0galswXS5pZDsKICAgICAgICAgICAgICAgIHN0YXRlLmNvbW1pdCgic2V0Q3VycmVudEpva2UiLCBqWzBdLmlkKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLnRvdGFsVnVlUGFja2FnZXMpOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHBvc3RDdXJyZW50SWQ6IGZ1bmN0aW9uIHBvc3RDdXJyZW50SWQoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZGF0YWNoZWNrLCByZXF1ZXN0T3B0aW9ucywgcmVzcG9uc2UsIGRhdGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIFBPU1QgcmVxdWVzdCB1c2luZyBmZXRjaCB3aXRoIGFzeW5jL2F3YWl0CiAgICAgICAgICAgICAgICBzdGF0ZS5hZnRlcmNoZWNrID0gcGF5bG9hZDsKICAgICAgICAgICAgICAgIGRhdGFjaGVjayA9IHsKICAgICAgICAgICAgICAgICAgcGF5bG9hZDogcGF5bG9hZAogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIHJlcXVlc3RPcHRpb25zID0gewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YWNoZWNrKQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL21vZGVzIiwgcmVxdWVzdE9wdGlvbnMpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMyLnBvc3RJZCA9IGRhdGEucGF5bG9hZDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0YXRlLmFmdGVyY2hlY2spOwogICAgICAgICAgICAgICAgc3RhdGUuY29tbWl0KCJwb3N0Q3VycmVudElkIiwgZGF0YS5wYXlsb2FkKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0sCiAgbW9kdWxlczoge30sCiAgZ2V0dGVyczogewogICAgZ2V0Q3VycmVudEpva2U6IGZ1bmN0aW9uIGdldEN1cnJlbnRKb2tlKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jdXJyZW50Sm9rZTsKICAgIH0sCiAgICBnZXRBbGxKb2tlczogZnVuY3Rpb24gZ2V0QWxsSm9rZXMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmFsbEpva2VzOwogICAgfSwKICAgIGdldE9uT2ZmU3RhdHVzOiBmdW5jdGlvbiBnZXRPbk9mZlN0YXR1cyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY2hlY2tlZDsKICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["C:/Users/user/Documents/program/Button-vuex-api/src/store/index.js"],"names":["Vue","Vuex","use","Store","state","currentJoke","allJokes","checked","postId","mutations","setCurrentJoke","payload","push","onCurrentStatus","commit","postCurrentId","actions","random","Math","floor","fetch","joke","json","j","totalVuePackages","id","console","log","aftercheck","datacheck","requestOptions","method","headers","body","JSON","stringify","response","data","modules","getters","getCurrentJoke","getAllJokes","getOnOffStatus"],"mappings":"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","sourcesContent":["import Vue from \"vue\";\r\nimport Vuex from \"vuex\";\r\n\r\nVue.use(Vuex);\r\n\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    currentJoke: \"This is a joke\",\r\n    allJokes: [],\r\n    checked: '',\r\n    postId: null,\r\n  },\r\n  mutations: {\r\n    //syncrous\r\n    setCurrentJoke(state, payload) {\r\n      state.currentJoke = payload;\r\n      state.allJokes.push(payload);\r\n    },\r\n    onCurrentStatus(state, payload) {\r\n      state.checked = payload;\r\n      if (state.checked === true) {\r\n        state.checked = true;\r\n        this.commit(\"setCurrentJoke\", state.checked);\r\n      } else {\r\n        state.checked = false;\r\n        this.commit(\"setCurrentJoke\", state.checked);\r\n      }\r\n    },\r\n    postCurrentId(state, payload){\r\n      state.checked = payload;\r\n      if (state.checked === true) {\r\n        state.checked = true;\r\n        this.commit(\"setCurrentJoke\", state.checked);\r\n      } else {\r\n        state.checked = false;\r\n        this.commit(\"setCurrentJoke\", state.checked);\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    //asyncronous\r\n    async setCurrentJoke(state) {\r\n      const random = Math.floor(Math.random() * 2);\r\n      const joke = await fetch(`http://localhost:3000/modes/?id=${random}`);\r\n      const j = await joke.json();\r\n      this.totalVuePackages = j[0].id;\r\n      state.commit(\"setCurrentJoke\", j[0].id);\r\n      console.log(this.totalVuePackages);\r\n    },\r\n    async postCurrentId(state,payload) {\r\n      // POST request using fetch with async/await\r\n      state.aftercheck = payload;\r\n      const datacheck= { payload };\r\n      const requestOptions = {  \r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(datacheck)\r\n      };\r\n      const response = await fetch(\"http://localhost:3000/modes\", requestOptions);\r\n      const data = await response.json();\r\n      this.postId = data.payload;\r\n      console.log(state.aftercheck);\r\n      state.commit(\"postCurrentId\", data.payload);\r\n    }\r\n  },\r\n  modules: {},\r\n  getters: {\r\n    getCurrentJoke: state => state.currentJoke,\r\n    getAllJokes: state => state.allJokes,\r\n    getOnOffStatus: state => state.checked,\r\n  }\r\n});\r\n"]}]}